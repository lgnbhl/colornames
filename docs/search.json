[{"path":"https://felixluginbuhl.com/colornames/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Félix Luginbuhl. Author, maintainer.","code":""},{"path":"https://felixluginbuhl.com/colornames/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Luginbuhl F (2023). colornames: Convert Color Values Color Names. https://felixluginbuhl.com/colornames/, https://github.com/lgnbhl/colornames/.","code":"@Manual{,   title = {colornames: Convert Color Values into Color Names},   author = {Félix Luginbuhl},   year = {2023},   note = {https://felixluginbuhl.com/colornames/, https://github.com/lgnbhl/colornames/}, }"},{"path":"https://felixluginbuhl.com/colornames/index.html","id":"colornames-","dir":"","previous_headings":"","what":"Convert Color Values into Color Names","title":"Convert Color Values into Color Names","text":"Convert Color Values Color Names colornames R package aims convert color values color names using various APIs: www.thecolorapi.com: pass valid color get conversion format, name color, placeholder images multitude schemes. colornames.org: collaborative effort name every color RGB/web space. can name random color vote incoming color names. color.pizza: Rest API returns bunch color names given color-value.","code":""},{"path":"https://felixluginbuhl.com/colornames/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Convert Color Values into Color Names","text":"","code":"install.packages(\"colornames\")  #install.packages(\"devtools\") devtools::install_github(\"lgnbhl/colornames\") # from GitHub"},{"path":"https://felixluginbuhl.com/colornames/index.html","id":"minimal-examples","dir":"","previous_headings":"","what":"Minimal examples","title":"Convert Color Values into Color Names","text":"Color name using thecolorapi’s API. Color name using colornames’s API. Color name using color.pizza’s API.","code":"library(colornames) get_color_thecolorapi(hex = \"#0047AB\") ## [1] \"Cobalt\" get_color_colornames(hex = \"#0047AB\") ## [1] \"Cobalt Blue\" get_color_colorpizza(hex = \"#0047AB\") ## [1] \"Soulstone Blue\""},{"path":"https://felixluginbuhl.com/colornames/index.html","id":"thecolorapicom-api","dir":"","previous_headings":"","what":"thecolorapi.com API","title":"Convert Color Values into Color Names","text":"Call get_color_thecolorapi() get closest color name available hex code. “thecolorapi.com” API return list variables given color name, using return_name_only = FALSE. can create data.frame list. can get color names different color convention, .e. rgb, hsl cmyk. can get color names existing list colors using closest named hex available. can also get color scheme (color palette) color. Note invalid color name used, API return “#000000” (black color).","code":"get_color_thecolorapi(hex = \"#0047AB\") ## [1] \"Cobalt\" col1 <- get_color_thecolorapi(hex = \"#0047AB\", return_name_only = FALSE)  str(col1, max.level = 1) ## List of 11 ##  $ hex      :List of 2 ##  $ rgb      :List of 5 ##  $ hsl      :List of 5 ##  $ hsv      :List of 5 ##  $ name     :List of 4 ##  $ cmyk     :List of 6 ##  $ XYZ      :List of 5 ##  $ image    :List of 2 ##  $ contrast :List of 1 ##  $ _links   :List of 1 ##  $ _embedded: Named list() as.data.frame(col1[1:9]) ##   hex.value hex.clean rgb.fraction.r rgb.fraction.g rgb.fraction.b rgb.r rgb.g ## 1   #0047AB    0047AB              0      0.2784314      0.6705882     0    71 ##   rgb.b       rgb.value hsl.fraction.h hsl.fraction.s hsl.fraction.l hsl.h ## 1   171 rgb(0, 71, 171)      0.5974659              1      0.3352941   215 ##   hsl.s hsl.l           hsl.value hsv.fraction.h hsv.fraction.s hsv.fraction.v ## 1   100    34 hsl(215, 100%, 34%)      0.5974659              1      0.6705882 ##             hsv.value hsv.h hsv.s hsv.v name.value name.closest_named_hex ## 1 hsv(215, 100%, 67%)   215   100    67     Cobalt                #0047AB ##   name.exact_match_name name.distance cmyk.fraction.c cmyk.fraction.m ## 1                  TRUE             0               1       0.5847953 ##   cmyk.fraction.y cmyk.fraction.k           cmyk.value cmyk.c cmyk.m cmyk.y ## 1               0       0.3294118 cmyk(100, 58, 0, 33)    100     58      0 ##   cmyk.k XYZ.fraction.X XYZ.fraction.Y XYZ.fraction.Z       XYZ.value XYZ.X ## 1     33      0.2206082      0.2475506      0.6705831 XYZ(22, 25, 67)    22 ##   XYZ.Y XYZ.Z                                                       image.bare ## 1    25    67 https://www.thecolorapi.com/id?format=svg&named=false&hex=0047AB ##                                            image.named   value ## 1 https://www.thecolorapi.com/id?format=svg&hex=0047AB #ffffff get_color_thecolorapi(rgb = paste(3,60,71, sep = \",\")) ## [1] \"Blue Whale\" get_color_thecolorapi(hsl = paste(\"100\",\"100%\",\"34%\", sep = \",\")) ## [1] \"Limeade\" get_color_thecolorapi(cmyk = paste(50,58,0,33, sep = \",\")) ## [1] \"Plump Purple\" library(scales) library(purrr)  pal_hue <- scales::brewer_pal()(6)  pal_names <- purrr::map_chr(.x = pal_hue, .f = get_color_thecolorapi)  data.frame(   hex = pal_hue,   name = pal_names ) ##       hex           name ## 1 #EFF3FF         Zircon ## 2 #C6DBEF        Spindle ## 3 #9ECAE1 Regent St Blue ## 4 #6BAED6     Aqua Pearl ## 5 #3182BD          Denim ## 6 #08519C    Venice Blue pal <- get_color_thecolorapi_scheme(   hex = \"0047AB\",    count = 5,    mode = \"monochrome\",    return_name_only = FALSE)  #get closed color name available # data.frame( #   hex = pal$colors$hex$value, #   name = pal$colors$name$value # )  pal$colors$hex ##     value  clean ## 1 #01122A 01122A ## 2 #02285D 02285D ## 3 #023D8F 023D8F ## 4 #0252C3 0252C3 ## 5 #0167F6 0167F6 get_color_thecolorapi(hex = \"InvalidColorReturnsBlack\") ## [1] \"Black\""},{"path":"https://felixluginbuhl.com/colornames/index.html","id":"colornamesorg-api","dir":"","previous_headings":"","what":"colornames.org API","title":"Convert Color Values into Color Names","text":"function get_color_colornames() can also return dataframe using return_name_only = FALSE. Note API returns hex codes pure numbers, without starting hashtag “#” Hex codes always 6 characters: also get random color name: can explore latest 100 submissions: can loop get color names given palette: color names missing (like ), can choose give name. reason want use color names database production, aware color names potentially changing anyone can vote anytime change color name. Therefore download copy colornames database given time. can download complete data use locally. downloadable data totally free rights, CC0 1.0.","code":"get_color_colornames(hex = \"3D290C\") ## [1] \"Swiss Dark Chocolate\" df <- get_color_colornames(hex = \"3D290C\", return_name_only = FALSE) #add \"#\" back in beginning of each hex code df$hexCode <- paste0(\"#\", df$hexCode) df ##   hexCode                 name ## 1 #3d290c Swiss Dark Chocolate get_color_colornames(hex = \"440154FF\") # Error: Hex code 440154FF has 8 characters.  # Hex code should have 6 characters. get_color_colornames_random(return_name_only = FALSE) ##   hexCode              name ## 1  f771ad Pretty Little Pig latest_100 <- get_color_colornames_latest(return_name_only = FALSE)  head(latest_100) ##    nameId hexCode                             name ## 1 5192882  991bb2 Cadbury Heroes Box Colour Purple ## 2 5192881  acf4d8               Minty Bubblegum Ho ## 3 5192880  c80c3b                Blood Cell Red Ho ## 4 5192879  8c345a    Morado Una Mijilla Mas Oscuro ## 5 5192878  04b481               Babylonian Gardens ## 6 5192877  af171f                  Cannibal's Love library(scales) library(purrr)  pal_hue <- scales::brewer_pal()(6) pal_names <- purrr::map_chr(.x = pal_hue, .f = get_color_colornames)  data.frame(   hex = pal_hue,   name = pal_names ) ##       hex                name ## 1 #EFF3FF When I Remember You ## 2 #C6DBEF    Cloud Initiation ## 3 #9ECAE1                <NA> ## 4 #6BAED6                <NA> ## 5 #3182BD                <NA> ## 6 #08519C                <NA> url_data <- \"https://colornames.org/download/colornames.zip\" your_file_path <- paste0(getwd(), \"/colornames-\", Sys.Date(), \".zip\") download.file(url = url_data, destfile = your_file_path) colornames_df <- readr::read_csv(your_file_path)  # Joke with hex codes 00000 to 00003 colornames_df # # A tibble: 3,157,757 × 3 #    hex bestName                     votes #    <chr>   <chr>                        <dbl> #  1 000000  Dude Turn The Lights Back On  5351 #  2 000001  It's Still Basically Black     729 #  3 000002  Still Black                    121 #  4 000003  So Close To Black It Hurts     145 #  5 000004  Blackerererer                   27 #  6 000005  Jet Black Heart                 16 #  7 000006  Abaddon                         16 #  8 000007  Double O Seven                  56 #  9 000008  Closed Eyes                     26 # 10 000009  Really Dark Blue                29 # # ℹ 3,157,747 more rows"},{"path":"https://felixluginbuhl.com/colornames/index.html","id":"colorpizza-api","dir":"","previous_headings":"","what":"color.pizza API","title":"Convert Color Values into Color Names","text":"color.pizza database stable modified core contributors. can get name closest color name get_color_colorpizza(). can access different information given color using return_name_only = FALSE. can get color names unique source “list” argument avoid duplicated colors “noduplicates”. can get color names existing list colors using closest named hex available.","code":"get_color_colorpizza(hex = \"#3D290C\") ## [1] \"Black Swan\" get_color_colorpizza(hex = \"#3D290C\", return_name_only = FALSE) ##         name     hex rgb.r rgb.g rgb.b hsl.h hsl.s hsl.l   lab.l   lab.a ## 1 Black Swan #332200    51    34     0    40   100    10 14.8627 5.70118 ##      lab.b luminance luminanceWCAG bestContrast ## 1 21.82334   25.1168       0.01848        white ##                           swatchImg.svgNamed            swatchImg.svg ## 1 /v1/swatch/?color=3d290c&name=Black%20Swan /v1/swatch/?color=3d290c ##   requestedHex distance ## 1      #3d290c  2.90889 get_color_colorpizza(   hex = c(\"#3D290C\",\"#1c2f11\",\"#2e3f24\"),   list = \"wikipedia\",   noduplicates = TRUE,   return_name_only = FALSE) ##            name     hex ## 1     Café Noir #4b3621 ## 2 Phthalo Green #123524 ## 3   Kombu Green #354230 ##                                                           link rgb.r rgb.g ## 1  https://en.wikipedia.org/wiki/Coffee_(color)#Caf%C3%A9_Noir    75    54 ## 2         https://en.wikipedia.org/wiki/Phthalocyanine_Green_G    18    53 ## 3 https://en.wikipedia.org/wiki/Chartreuse_(color)#Kombu_green    53    66 ##   rgb.b hsl.h    hsl.s    hsl.l    lab.l     lab.a    lab.b luminance ## 1    33    30 38.88889 21.17647 24.64653   7.52734 17.00318  39.01021 ## 2    36   151 49.29577 13.92157 19.19804 -16.97218  6.79941  31.83870 ## 3    48   103 15.78947 22.35294 26.38109  -8.54020  9.18584  42.21389 ##   luminanceWCAG bestContrast                             swatchImg.svgNamed ## 1       0.04244        white /v1/swatch/?color=3d290c&name=Caf%C3%A9%20Noir ## 2       0.02802        white  /v1/swatch/?color=1c2f11&name=Phthalo%20Green ## 3       0.04867        white    /v1/swatch/?color=2e3f24&name=Kombu%20Green ##              swatchImg.svg requestedHex distance ## 1 /v1/swatch/?color=3d290c      #3d290c  5.21463 ## 2 /v1/swatch/?color=1c2f11      #1c2f11  7.07137 ## 3 /v1/swatch/?color=2e3f24      #2e3f24  4.03246 library(purrr) library(scales)  pal_hue <- scales::brewer_pal()(6) pal_hue_names <- get_color_colorpizza(hex = pal_hue)  data.frame(   hex = pal_hue,   name = pal_hue_names ) ##       hex                 name ## 1 #EFF3FF        Coconut White ## 2 #C6DBEF          Arctic Rain ## 3 #9ECAE1          Legacy Blue ## 4 #6BAED6 Broom Butterfly Blue ## 5 #3182BD          King Triton ## 6 #08519C           USAFA Blue"},{"path":"https://felixluginbuhl.com/colornames/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Felix Luginbuhl Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://felixluginbuhl.com/colornames/reference/get_color_colornames.html","id":null,"dir":"Reference","previous_headings":"","what":"Get color name from colornames.org API — get_color_colornames","title":"Get color name from colornames.org API — get_color_colornames","text":"Return best color name hex color colornames API <https://colornames.org/download/>. color name exists, returns NULL`. can give color name vote best color names : <https://colornames.org/color/-HEX-CODE>.","code":""},{"path":"https://felixluginbuhl.com/colornames/reference/get_color_colornames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get color name from colornames.org API — get_color_colornames","text":"","code":"get_color_colornames(hex, return_name_only = TRUE)"},{"path":"https://felixluginbuhl.com/colornames/reference/get_color_colornames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get color name from colornames.org API — get_color_colornames","text":"hex Hex color code return_name_only FALSE returns color name ","code":""},{"path":"https://felixluginbuhl.com/colornames/reference/get_color_colornames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get color name from colornames.org API — get_color_colornames","text":"","code":"if (FALSE) { get_color_colornames(hex = \"#0047AB\") }"},{"path":"https://felixluginbuhl.com/colornames/reference/get_color_colorpizza.html","id":null,"dir":"Reference","previous_headings":"","what":"Get color name from color.pizza API — get_color_colorpizza","title":"Get color name from color.pizza API — get_color_colorpizza","text":"Rest API returns bunch color names given color-value.","code":""},{"path":"https://felixluginbuhl.com/colornames/reference/get_color_colorpizza.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get color name from color.pizza API — get_color_colorpizza","text":"","code":"get_color_colorpizza(   hex,   list = NULL,   noduplicates = FALSE,   return_name_only = TRUE )"},{"path":"https://felixluginbuhl.com/colornames/reference/get_color_colorpizza.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Get color name from color.pizza API — get_color_colorpizza","text":"https://github.com/meodai/color-name-api","code":""},{"path":"https://felixluginbuhl.com/colornames/reference/get_color_colorpizza.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get color name from color.pizza API — get_color_colorpizza","text":"hex character. Hex color code list character. available Color Name List. noduplicates boolean. TRUE remove duplicates return_name_only boolean. TRUE returns color name ","code":""},{"path":"https://felixluginbuhl.com/colornames/reference/get_color_colorpizza.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get color name from color.pizza API — get_color_colorpizza","text":"","code":"if (FALSE) { get_color_colorpizza(   hex = c(\"#3D290C\",\"#1c2f11\",\"#2e3f24\"),   list = \"wikipedia\",   noduplicates = TRUE) }"},{"path":"https://felixluginbuhl.com/colornames/reference/get_color_name_latest.html","id":null,"dir":"Reference","previous_headings":"","what":"Get 100 latest color submissions from colornames.org API — get_color_colornames_latest","title":"Get 100 latest color submissions from colornames.org API — get_color_colornames_latest","text":"Get 100 latest color submissions colornames.org API","code":""},{"path":"https://felixluginbuhl.com/colornames/reference/get_color_name_latest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get 100 latest color submissions from colornames.org API — get_color_colornames_latest","text":"","code":"get_color_colornames_latest(return_name_only = TRUE)"},{"path":"https://felixluginbuhl.com/colornames/reference/get_color_name_latest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get 100 latest color submissions from colornames.org API — get_color_colornames_latest","text":"return_name_only TRUE returns color name ","code":""},{"path":"https://felixluginbuhl.com/colornames/reference/get_color_name_latest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get 100 latest color submissions from colornames.org API — get_color_colornames_latest","text":"","code":"if (FALSE) { get_color_colornames_latest() }"},{"path":"https://felixluginbuhl.com/colornames/reference/get_color_name_random.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a random color name from colornames.org API — get_color_colornames_random","title":"Get a random color name from colornames.org API — get_color_colornames_random","text":"Get random color name colornames.org API","code":""},{"path":"https://felixluginbuhl.com/colornames/reference/get_color_name_random.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a random color name from colornames.org API — get_color_colornames_random","text":"","code":"get_color_colornames_random(return_name_only = TRUE)"},{"path":"https://felixluginbuhl.com/colornames/reference/get_color_name_random.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a random color name from colornames.org API — get_color_colornames_random","text":"return_name_only TRUE returns color name ","code":""},{"path":"https://felixluginbuhl.com/colornames/reference/get_color_name_random.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a random color name from colornames.org API — get_color_colornames_random","text":"","code":"if (FALSE) { get_color_colornames_random() }"},{"path":"https://felixluginbuhl.com/colornames/reference/get_color_thecolorapi.html","id":null,"dir":"Reference","previous_headings":"","what":"Get color name from thecolorapi.com API — get_color_thecolorapi","title":"Get color name from thecolorapi.com API — get_color_thecolorapi","text":"Return available identifying information given color.","code":""},{"path":"https://felixluginbuhl.com/colornames/reference/get_color_thecolorapi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get color name from thecolorapi.com API — get_color_thecolorapi","text":"","code":"get_color_thecolorapi(   hex = NULL,   rgb = NULL,   hsl = NULL,   cmyk = NULL,   format = \"json\",   w = 100,   named = TRUE,   return_name_only = TRUE )"},{"path":"https://felixluginbuhl.com/colornames/reference/get_color_thecolorapi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get color name from thecolorapi.com API — get_color_thecolorapi","text":"hex string (optional), Valid hex code. rgb string (optional), Valid rgb color. hsl string (optional), Valid hsl color. cmyk string (optional) Valid cmyk color. format string (optional). Return results JSON, SVG HTML page. Example: \"html\". w integer (optional). Height resulting image, applicable SVG format. Example: 350. named boolean (optional) Whether print color names resulting image, applicable SVG format. Example: FALSE. return_name_only boolean. TRUE returns color name ","code":""},{"path":"https://felixluginbuhl.com/colornames/reference/get_color_thecolorapi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get color name from thecolorapi.com API — get_color_thecolorapi","text":"","code":"if (FALSE) { get_color_thecolorapi(hex = \"0047AB\") get_color_thecolorapi(rgb = paste(0,71,171, sep = \",\")) get_color_thecolorapi(hsl = paste(\"215\",\"100%\",\"34%\", sep = \",\")) get_color_thecolorapi(cmyk = paste(100,58,0,33, sep = \",\")) }"},{"path":"https://felixluginbuhl.com/colornames/reference/get_color_thecolorapi_scheme.html","id":null,"dir":"Reference","previous_headings":"","what":"Get color scheme from thecolorapi.com API — get_color_thecolorapi_scheme","title":"Get color scheme from thecolorapi.com API — get_color_thecolorapi_scheme","text":"Return generated scheme provided seed color optional mode. Color schemes multi-color combinations chosen according color-wheel relationsships.","code":""},{"path":"https://felixluginbuhl.com/colornames/reference/get_color_thecolorapi_scheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get color scheme from thecolorapi.com API — get_color_thecolorapi_scheme","text":"","code":"get_color_thecolorapi_scheme(   hex = NULL,   rgb = NULL,   hsl = NULL,   cmyk = NULL,   count = 5,   mode = \"monochrome\",   format = \"json\",   w = 100,   named = TRUE,   return_name_only = TRUE )"},{"path":"https://felixluginbuhl.com/colornames/reference/get_color_thecolorapi_scheme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get color scheme from thecolorapi.com API — get_color_thecolorapi_scheme","text":"hex string (optional), Valid hex code. rgb string (optional), Valid rgb color. hsl string (optional), Valid hsl color. cmyk string (optional) Valid cmyk color. count integer (optional). Number colors return. Default: 5 Example: 6. mode string (optional). Define mode generate scheme seed color. Example: \"analogic\". format string (optional). Return results JSON, SVG HTML page. Example: \"html\". w integer (optional). Height resulting image, applicable SVG format. Example: 350. named boolean (optional) Whether print color names resulting image, applicable SVG format. Example: FALSE. return_name_only boolean. FALSE returns color name ","code":""},{"path":"https://felixluginbuhl.com/colornames/reference/get_color_thecolorapi_scheme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get color scheme from thecolorapi.com API — get_color_thecolorapi_scheme","text":"","code":"if (FALSE) { get_color_thecolorapi_scheme(hex = \"0047AB\", count = 3, mode = \"complement\") }"}]
